compare_groups(simmr.out.group, source = "Brown algae", groups =  c(5,8))
## all groups
compare_groups(simmr.out.group, source = "Brown algae", groups =  1:8)
## specify groups
compare_groups(simmr.out.group, source = "Brown algae", groups =  c(5,8))
## specify groups
compare_groups(simmr.out.group, source = "Brown algae", groups =  c(5,8))
## all groups
compare_groups(simmr.out.group, source = "Brown algae", groups =  1:3)
summary.simmr_output(simmr.out.group)
aa = summary.simmr_output(simmr.out.group)
aa
aa$correlations
summary.simmr_output(simmr.out.group)
summary.simmr_output(simmr.out.group)%>%round(2)
compare_groups(simmr.out.group)
compare_groups(simmr.out.group, groups = 1:2)
compare_groups(simmr.out.group, groups = 1:2, source_name = simmr.out.group$input$source_names[1])
simmr.out.group$input$source_names
simmr.out.group$input$source_names[1]
simmr.out.group$input$source_names[1:2]
compare_groups(simmr.out.group, groups = 1:2, source_name = simmr.out.group$input$source_names[1:2])
simmr.out.group$input$source_means[1:2]
compare_sources(simmr.out.group)
compare_groups(simmr.out.group)
getwd()
readxl::read_excel("Clean_Data.xlsx", sheet = 2)
readxl::read_excel("Clean_Data.xlsx", sheet = 1)
`r format(Sys.time(), 'On %d %B, %Y at %H:%M:%OS3')`
format(Sys.time(), 'On %d %B, %Y at %H:%M:%OS3')
format(Sys.time(), 'On %d %B, %Y at %H:%M:%OS3')%>%as.Date()
knitr::opts_chunk$set(echo = FALSE)
setwd("E:/Data Manipulation/Kim/isotopes/")
require(tidyverse)
require(simmr)
require(DT)
require(cowplot)
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
kim
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
kim
kim%>%separate(Sample, c("tissue", "number"))
kim%>%separate(Sample, c("tissue", "number"), sep = -1)
kim%>%separate(Sample, c("tissue", "number"), sep = -2)
kim%>%separate(Sample, c("tissue", "number"), sep = 1)
kim%>%separate(Sample, c("tissue", "number"), sep = 1, remove = F)
kim%>%separate(Sample, c("tissue", "number"), sep = 1, remove = T)
kim%>%separate(Sample, c("tissue", "number"), sep = 1, remove = T)%>%mutate(site.grp = Site)
kim%>%separate(Sample, c("tissue", "number"), sep = 1, remove = T)%>%mutate(site.grp = Site, site.grp = replace(site.grp, site.grp == "Kunduchi", 1))
kim%>%
separate(Sample, c("tissue", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))
kim%>%
separate(Sample, c("tissue", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number)
kim = kim%>%
separate(Sample, c("tissue", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number)
kim
kim$site.grp = as.integer(kim$site.grp)
knitr::kable(kim, caption = "Table 1: Overview of Isotopes")
knitr::kable(kim%>%group_by(Spp)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/72*100),
digits = 2, caption = "Table 2: Summary statistics of the six common species")
## read the file
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
## tidy the data
kim = kim%>%
separate(Sample, c("tissue", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number)
## convert the character into integer
kim$site.grp = as.integer(kim$site.grp)
knitr::kable(kim%>%group_by(Spp, tissue)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/84*100),
digits = 2, caption = "Table 2: Summary statistics of the six common species")
knitr::kable(kim%>%group_by(Site,Spp, tissue)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/84*100),
digits = 2, caption = "Table 2: Summary statistics of the six common species")
## tidy the data
kim = kim%>%
separate(Sample, c("sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number)
## read the file
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
## tidy the data
kim = kim%>%
separate(Sample, c("sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number)
knitr::kable(kim, caption = "Table 1: Overview of Isotopes")
## tidy the data
kim = kim%>%
separate(Sample, c("sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number, Species = spp)
## read the file
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
## tidy the data
kim = kim%>%
separate(Sample, c("sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number, Species = spp)
## tidy the data
kim = kim%>%
separate(Sample, c("sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number, Species = Spp)
knitr::kable(kim, caption = "Table 1: Overview of Isotopes")
## read the file
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
## tidy the data
kim = kim%>%
separate(Sample, c("Sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number, Species = Spp, Station = Site,  Site = site.grp)
knitr::kable(kim, caption = "Table 1: Overview of Isotopes")
knitr::kable(kim%>%group_by(Station,Species, Sample)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the six common species")
## read the file
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
## tidy the data
kim = kim%>%
separate(Sample, c("Sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number, Species = Spp, Area = Site,  Site = site.grp)
## convert the character into integer
kim$site.grp = as.integer(kim$site.grp)
kim
## convert the character into integer
kim$Site = as.integer(kim$Site)
knitr::kable(kim, caption = "Table 1: Overview of Isotopes")
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the six common species")
mix = kim%>%select(2,3)%>%as.matrix()
mix
mix = kim%>%select(1,2)%>%as.matrix()
mix
mean.data = kim%>%group_by(Species)%>%
summarise(d13C = mean(d13C), d15N = mean(d15N))%>%
ungroup()
names(kim)
## read the file
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
## tidy the data
kim = kim%>%
separate(Sample, c("Sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2))%>%
select(-number, Species = Spp, Area = Site,  Site = site.grp)
## convert the character into integer
kim$Site = as.integer(kim$Site)
knitr::kable(kim, caption = "Table 1: Overview of Isotopes")
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the six common species")
mix = kim%>%select(1,2)%>%as.matrix()
mix
mean.data = kim%>%group_by(Species)%>%
summarise(d13C = mean(d13C), d15N = mean(d15N))%>%
ungroup()
mean.data
s_names = mean.data$SpeciesName
s_names = mean.data$Species
s_names
s_means = mean.data[,1:2]%>%as.matrix()
s_means
mean.data
mean.data
s_means = mean.data[,1:2]%>%as.matrix()
s_means
mean.data
sd.data = kim%>%group_by(Species)%>%
summarise(d13C = sd(d13C), d15N = sd(d15N))%>%
ungroup()
s_sds = sd.data[,2:3]%>%as.matrix()
s_sds
s_means = mean.data[,1:2]%>%as.matrix()
s_means
mean.data = kim%>%group_by(Species)%>%
summarise(d13C = mean(d13C), d15N = mean(d15N))%>%
ungroup()
mean.data
s_means = mean.data[,2:3]%>%as.matrix()
s_means
s_sds
s_names
group = kim$Site
group
sites = kim$Site
simmr.in.group = simmr_load(mixtures = mix,
source_names = s_names,
source_means = s_means,
source_sds = s_sds,
group = sites)
simmr.in.group
mix
simmr.in.group
kim
table(kim$Sample)
## read the file
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
## tidy the data
kim = kim%>%
separate(Sample, c("Sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site, sample = Sample,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2),
sample = replace(sample, sample == "F", 1),
sample = replace(sample(), sample == "T", 2))%>%
select(-number, Species = Spp, Area = Site,  Site = site.grp)
kim
kim%>%
separate(Sample, c("Sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site, sample = Sample)
## tidy the data
kim = kim%>%
separate(Sample, c("Sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site, sample = Sample,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2),
sample = replace(sample, sample == "F", 1),
sample = replace(sample, sample == "T", 2))%>%
select(-number, Species = Spp, Area = Site,  Site = site.grp)
kim
kim$sample = as.integer(kim$sample)
## convert the character into integer
kim$Site = as.integer(kim$Site)
kim
mix = kim%>%select(1,2)%>%as.matrix()
mix
mean.data = kim%>%group_by(Species)%>%
summarise(d13C = mean(d13C), d15N = mean(d15N))%>%
ungroup()
s_means = mean.data[,2:3]%>%as.matrix()
sd.data = kim%>%group_by(Species)%>%
summarise(d13C = sd(d13C), d15N = sd(d15N))%>%
ungroup()
s_sds = sd.data[,2:3]%>%as.matrix()
s_names = mean.data$Species
kim
sites = kim$sample
sites
tissue = kim$sample
tissue = kim$sample
simmr.in.group = simmr_load(mixtures = mix,
source_names = s_names,
source_means = s_means,
source_sds = s_sds,
group = tissue)
simmr.in.group
simmr.in.group = simmr_load(mixtures = mix,
source_names = s_names,
source_means = s_means,
source_sds = s_sds,
group = sites)
simmr.in.group
simmr.in.group.sample = simmr_load(mixtures = mix,
source_names = s_names,
source_means = s_means,
source_sds = s_sds,
group = tissue)
simmr.in.group.sample
simmr.in.group.sites = simmr_load(mixtures = mix,
source_names = s_names,
source_means = s_means,
source_sds = s_sds,
group = sites)
plot(simmr.in.group.sites, group = 1:2, mix_name='Site', colour = TRUE)+
cowplot::theme_cowplot()+
# theme(legend.position = c(.75,.3))+
# scale_y_continuous(breaks = seq(1,8,1))+
# scale_x_continuous(breaks = seq(-30,-10,4))+
labs(x = expression(paste(delta^13, "C (\u2030)",sep="")),
y=expression(paste(delta^15, "N (\u2030)",sep="")),
title='Isospace plot ')
plot(simmr.in.group.sample, group = 1:2, mix_name='Tissue', colour = TRUE)+
cowplot::theme_cowplot()+
# theme(legend.position = c(.75,.3))+
# scale_y_continuous(breaks = seq(1,8,1))+
# scale_x_continuous(breaks = seq(-30,-10,4))+
labs(x = expression(paste(delta^13, "C (\u2030)",sep="")),
y=expression(paste(delta^15, "N (\u2030)",sep="")),
title='Isospace plot ')
plot(simmr.in.group.sites, group = 1:2, mix_name='Site', colour = TRUE)+
cowplot::theme_cowplot()+
# theme(legend.position = c(.75,.3))+
# scale_y_continuous(breaks = seq(1,8,1))+
# scale_x_continuous(breaks = seq(-30,-10,4))+
labs(x = expression(paste(delta^13, "C (\u2030)",sep="")),
y=expression(paste(delta^15, "N (\u2030)",sep="")),
title='Isospace plot ')
plot(simmr.in.group.sample, group = 1:2, mix_name='Tissue', colour = TRUE)+
cowplot::theme_cowplot()+
# theme(legend.position = c(.75,.3))+
# scale_y_continuous(breaks = seq(1,8,1))+
# scale_x_continuous(breaks = seq(-30,-10,4))+
labs(x = expression(paste(delta^13, "C (\u2030)",sep="")),
y=expression(paste(delta^15, "N (\u2030)",sep="")),
title='Isospace plot ')
simmr.in.group.sites
simmr.in.group.sample
simmr.in.group.sample = simmr_load(mixtures = mix,
source_names = s_names,
source_means = s_means,
source_sds = s_sds,
group = tissue)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE)
# Chunk 2
setwd("E:/Data Manipulation/Kim/isotopes/")
# Chunk 3
require(tidyverse)
require(simmr)
require(DT)
require(cowplot)
# Chunk 4
## read the file
kim = readxl::read_excel("Clean_Data.xlsx", sheet = 1)%>%na.omit()
# Chunk 5
## tidy the data
kim = kim%>%
separate(Sample, c("Sample", "number"), sep = 1, remove = T)%>%
mutate(site.grp = Site, sample = Sample,
site.grp = replace(site.grp, site.grp == "Kunduchi", 1),
site.grp = replace(site.grp, site.grp == "Mbegani", 2),
sample = replace(sample, sample == "F", 1),
sample = replace(sample, sample == "T", 2))%>%
select(-number, Species = Spp, Area = Site,  Site = site.grp)
## convert the character into integer
kim$Site = as.integer(kim$Site)
kim$sample = as.integer(kim$sample)
# Chunk 6
knitr::kable(kim, caption = "Table 1: Overview of Isotopes")
# Chunk 7
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the six common species")
# Chunk 8
mix = kim%>%select(1,2)%>%as.matrix()
# Chunk 9
mean.data = kim%>%group_by(Species)%>%
summarise(d13C = mean(d13C), d15N = mean(d15N))%>%
ungroup()
s_means = mean.data[,2:3]%>%as.matrix()
sd.data = kim%>%group_by(Species)%>%
summarise(d13C = sd(d13C), d15N = sd(d15N))%>%
ungroup()
s_sds = sd.data[,2:3]%>%as.matrix()
s_names = mean.data$Species
# Chunk 10
sites = kim$Site
simmr.in.group.sites = simmr_load(mixtures = mix,
source_names = s_names,
source_means = s_means,
source_sds = s_sds,
group = sites)
# Chunk 11
plot(simmr.in.group.sites, group = 1:2, mix_name='Site', colour = TRUE)+
cowplot::theme_cowplot()+
# theme(legend.position = c(.75,.3))+
# scale_y_continuous(breaks = seq(1,8,1))+
# scale_x_continuous(breaks = seq(-30,-10,4))+
labs(x = expression(paste(delta^13, "C (\u2030)",sep="")),
y=expression(paste(delta^15, "N (\u2030)",sep="")),
title='Isospace plot ')
# Chunk 12
tissue = kim$sample
simmr.in.group.sample = simmr_load(mixtures = mix,
source_names = s_names,
source_means = s_means,
source_sds = s_sds,
group = tissue)
# Chunk 13
plot(simmr.in.group.sample, group = 1:2, mix_name='Tissue', colour = TRUE)+
cowplot::theme_cowplot()+
# theme(legend.position = c(.75,.3))+
# scale_y_continuous(breaks = seq(1,8,1))+
# scale_x_continuous(breaks = seq(-30,-10,4))+
labs(x = expression(paste(delta^13, "C (\u2030)",sep="")),
y=expression(paste(delta^15, "N (\u2030)",sep="")),
title='Isospace plot ')
summary.simmr_output(simmr.in.group.sites)
simmr.out.group = simmr_mcmc(simmr.in.group.sites)
simmr.out.group.sites = simmr_mcmc(simmr.in.group.sites)
summary.simmr_output(simmr.out.group.sites)
summary.simmr_output(simmr.out.group.sites$output)
summary.simmr_output(simmr.out.group.sites)
summary(simmr.in.group.sites, type = "statistics")
summary(simmr.in.group.sites, type = "statistic")
summary.simmr_output(simmr.out.group.sites)
summary(simmr.in.group.sites, type = c("quantiles","statistic"))
summary(simmr.in.group.sites, type = c("quantiles","statistic"), group = 1:2)
summary.simmr_output(simmr.out.group.sites)
summary.aov(simmr.in.group.sites, type = c("quantiles","statistic"), group = 1:2)
summary(simmr.out.group.sites, type = c("quantiles","statistic"), group = 1:2)
summary.simmr_output(simmr.out.group.sites)
summary(simmr.out.group.sites, type = c("quantiles","statistic"))
summary(simmr.out.group.sites, type = c("quantiles","statistic"), group = 1:2)
summary(simmr.out.group.sites, type = c("quantiles","statistic"), group = 1:2)
summary.simmr_output(simmr.out.group.sites)
aa = summary.simmr_output(simmr.out.group.sites)
aa
aa$correlations$group_1
summary.sites
summary.sites = summary.simmr_output(simmr.out.group.sites)
summary.sites$gelman
summary.sites$gelman%>%class()
summary.sites$gelman%>%as.tibble()
summary.sites$gelman$group_1
summary.sites$gelman$group_1%>%class()
summary.sites$gelman$group_1%>%as.tibble()
summary.sites$gelman$group_1%>%as.data.frame()
summary.sites$gelman$group_1%>%as.data.frame()%>%datatable()
summary.sites$gelman$group_1%>%as.data.frame()%>%knitr::kable(digits = 2)
summary.sites$gelman$group_1%>%as.data.frame()%>%knitr::kable(digits = 4)
summary.sites$gelman$group_1%>%as.data.frame()%>%knitr::kable(digits = 3)
summary(simmr.out.group.sites, type = "gelman")
summary.simmr_output(simmr.out.group.sites)
summary.sites
summary.sites$statistics
summary.sites$statistics$group_1%>%as.data.frame()%>%knitr::kable(digits = 3, caption = "The model accuracy is validated with the Gelman diagonistics---these values should be close to 1")
summary.sites$correlations$group_1%>%as.data.frame()%>%knitr::kable(digits = 3, caption = "Summary statistics")
plot(simmr.in.group.sites, type = "boxplot", group = 1, title = "Boxplot for group 2")
plot(simmr.out.group.sites, type = "boxplot", group = 1, title = "Boxplot for group 2")
plot(simmr.out.group.sites, type = "boxplot", group = 2, title = "Boxplot for group 1")
plot(simmr.out.group.sites, type = "boxplot", group = 1, title = "Boxplot for group 1")
plot(simmr.out.group.sites, type = "boxplot", group = 1")
plot(simmr.out.group.sites, type = "boxplot", group = 1)
plot(simmr.out.group.sites, type = "boxplot", group = 2)
cowplot::plot_grid(plot(simmr.out.group.sites, type = "boxplot", group = 1),
plot(simmr.out.group.sites, type = "boxplot", group = 2), nrow = 1)
cowplot::plot_grid(plot(simmr.out.group.sites, type = "boxplot", group = 1),
plot(simmr.out.group.sites, type = "boxplot", group = 2), nrow = 1, labels = c("A", "B"))
plot(simmr.out.group.sites, type = "boxplot", group = 2)
plot(simmr.out.group.sites, type = "boxplot", group = 1)
simmr.out.group.sites$output
simmr.out.group.sites$output[[1]]
simmr.out.group.sites$output
simmr.out.group.sites$output%>%class()
simmr.out.group.sites$output%>%str()
simmr.out.group.sites$output%>%glimpse()
simmr.out.group.sites$output[[2]]
simmr.out.group.sites$output[[1]]%>%as.data.frame()
c_names
ls()
s_names
## all groups
compare_groups(simmr.out.group.sites, source = "G.filamentosus", groups =  1:2)
## all groups
compare_groups(simmr.out.group.sites, source = "G.filamentosus", groups =  1:2, title = NULL)
## all groups
compare_groups(simmr.out.group.sites, source = "G.filamentosus", groups =  1:2, title = "NULL")
## all groups
compare_groups(simmr.out.group.sites, source = "G.filamentosus")
s_names
compare_groups(simmr.out.group.sites, source = "G.oyena", groups =  1:2)
compare_groups(simmr.out.group.sites, source = "S.barracuda", groups =  1:2)
simmr.out.group.sample = simmr_mcmc(simmr.in.group.sample)
summary.sample = summary.simmr_output(simmr.out.group.sample)
summary.sample$gelman$group_1%>%as.data.frame()%>%knitr::kable(digits = 3, caption = "The model accuracy is validated with the Gelman diagonistics---these values should be close to 1")
summary.sample$statistics$group_1%>%as.data.frame()%>%knitr::kable(digits = 3, caption = "Summary statistics")
summary.sample$correlations$group_1%>%as.data.frame()%>%knitr::kable(digits = 3, caption = "Correlations")
plot(simmr.out.group.sample, type = "boxplot", group = 1)
plot(simmr.out.group.sample, type = "boxplot", group = 2)
tissue
plot(simmr.out.group.sample, type = "boxplot", group = 1)
plot(simmr.out.group.sample, type = "boxplot", group = 2)
compare_groups(simmr.out.group.sample, source = "G.filamentosus", groups =  1:2)
compare_groups(simmr.out.group.sample, source = "S.barracuda", groups =  1:2)
compare_groups(simmr.out.group.sample, source = "G.oyena", groups =  1:2)
compare_groups(simmr.out.group.sample, source = "G.filamentosus", groups =  1:2)
summary.simmr_output(simmr.in.group.sites)
summary.simmr_output(simmr.out.group.sites)
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the three species")
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the three species", align = "c")
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(n))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the three species", align = "l")
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(Area))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the three species", align = "l")
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(Area, Species))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the three species", align = "l")
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(Area, Species, Sample))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the three species", align = "l")
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(desc(Area, Species))%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the three species", align = "l")
knitr::kable(kim%>%group_by(Area,Species, Sample)%>%count()%>%arrange(Area, Species)%>%mutate(percentage = n/84*100), digits = 2, caption = "Table 2: Summary statistics of the three species", align = "l")
install.packages("xtractomatic")
install.packages("xtractomatic")
require(tmap)
qtm(land, raster = "cover_cls")
data(land)
land
qtm(land, raster = "cover_cls")
qtm(land, raster = "cover")
tmap_mode("view")
qtm(land, raster = "cover")
install.packages("xtractomatic")
install.packages("xtractomatic")
q()
