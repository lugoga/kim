devtools::install_github('ropensci/plotdap')
mapdata::riversMapEnv
ls()
require(mapdata)
data("lakesMapEnv")
lakes = lakesMapEnv
lakes
map(lakes)
lakes
rm(list = ls())
data("world.cities")
map('world2Hires', xlim=c(100, 300))
data(world2Hires)
data('world2Hires')
devtools::install_github('ropensci/plotdap')
require(plotdap)
install.packages("gganimate")
devtools::install_github('thomasp85/gganimate')
require(gganimate)
citation("gganimatte")
citation("gganimate")
require(tidyverse)
devtools::session_info()
devtools::session_info()
devtools::install_github('rmendels/rerddapXracto')
devtools::install_github("rmendels/rerddapXtracto")
rerddapXtracto::Marlintag38606
install.packages("msltrend")
require(msltrend)
install.packages("msltrend")
require(msltrend)
install.packages("msltrend", dependencies = TRUE)
require(msltrend)
q()
require(msltrend)
data(Balt)
install.packages("msltrend")
require(msltrend)
install.packages("scales")
require(msltrend)
data("Balt")
balt = balt
balt = Balt
balt
plot(balt)
msl.pdf(balt)
msl.trend(balt)
s <- msl.trend(
'
Balt.csv
'
, fillgaps = 3, iter = 500,
'
BALTIMORE, USA
'
)
msl.trend(file = balt, station_name = "Dar", fillgaps = 3, iter = 500)
balt
write.csv(balt, "balt.csv")
getwd()
msl.trend(file = "balt.csv", station_name = "Dar", fillgaps = 3, iter = 500)
msl.trend(file = "balt.csv", station_name = "", fillgaps = 3, iter = 500)
msl.trend(file = "balt.csv", station_name = "Baltimore", fillgaps = 3, iter = 500)
names(balt)
names(Balt)
s <- msl.trend('Balt.csv', fillgaps = 3, iter = 500, 'BALTIMORE, USA')
View(Balt)
s <- msl.trend('Balt.csv', fillgaps = 3, iter = 500, 'BALTIMORE, USA')
q()
setwd("E:/Data Manipulation/Kim/landuse20180328/")
rm(list = ls())
require(sf)
require(tidyverse)
require(ggsci)
require(RColorBrewer)
require(gridExtra)
require(grid)
require(readxl)
require(ggsn)
landuse = st_read("landuse_clean.shp")%>%select(Name, DLMC, geometry)
landuse = landuse%>%mutate(DLMC = replace(DLMC, DLMC %in% c("millitary"), "military"))
points = read_excel("E:/Data Manipulation/Kim/Coordinates.xlsx")
points =  points%>%
bind_rows(data_frame(Site = "D9", Long = 39.18, Lat = -6.794))%>%
slice(2:9)%>%
mutate(Site = replace(Site, Site=="D9", "D1"))%>%
arrange(Site)
points$Lat[6] = -6.8149717
points = points%>%mutate(dist = oce::geodDist(points$Long, points$Lat, alongPath = TRUE))
river = st_read("E:/Data Manipulation/Kim/Msimbazi River/mSimbazi_river_clean.shp")
metals = read_excel("E:/Data Manipulation/Kim/MetalsDataR.xlsx")%>%
select(month = Season, As, Cd, Cr, Cu, Ni,Pb, Sn, Zn)
metals.season = points%>%
bind_rows(points)%>%
bind_cols(metals)%>%
mutate(season = month)%>%
mutate(season = replace(season, season %in% "March", "Wet"),
season = replace(season, season %in% "August", "Dry"))%>%
select(c(Site, Long, Lat, dist, month, season, As, Cd, Cr, Cu, Ni,Pb, Sn, Zn))
metals.season$Site = as.factor(metals.season$Site)
metals.season$season = as.factor(metals.season$season)
#glimpse(metals.season)
metals.season.long = metals.season%>%gather(key = "metals", value = "measurements", 7:14)
map = ggplot()+
geom_sf(data = landuse, aes(fill = class), col = 1)+
geom_sf(data = river, col = "blue", size =1)+
geom_point(data = points, aes(x = Long, y = Lat), size = 4, shape = 16)+
geom_text(data = points, aes(x=Long+0.003, y = Lat+0.003, label = Site))+
scale_fill_brewer(name = "Landuse\nlandcover\nClasses",palette = "Paired")+
theme_bw()+
scale_y_continuous(limits = c(-6.87, -6.765),
breaks = seq(-6.86, -6.78, length.out = 3))+
scale_x_continuous(breaks = seq(39.13, 39.3,
length.out = 3))+
theme(legend.direction = "horizontal",
legend.position = c(.5,.15),
legend.background = element_rect(colour = 1))+
labs(x = NULL, y = NULL)
map
land.use = landuse%>%
as_data_frame()%>%
select(name = Name, class = DLMC)
land.use$class = as.character(land.use$class)
land.use = land.use%>%
mutate(class = replace(class, class == "agriculture", "Agriculture"),
class = replace(class, class == "commercial", "Commercial"),
class = replace(class, class == "high-density residential", "High Density Residential"),
class = replace(class, class == "industrial", "Industrial"),
class = replace(class, class == "low-density residential", "Low Density Residential"),
class = replace(class, class == "military", "Military"),
class = replace(class, class == "school", "School"),
class = replace(class, class == "transportation", "Transportation"),
class = replace(class, class == "urban infrasture", "Urban Infrastructure"),
class = replace(class, class == "vegetation", "Vegetation"),
class = replace(class, class == "water", "Water"),
class = replace(class, class == "wetland", "Wetland"))
landuse = landuse%>%bind_cols(land.use)
map = ggplot()+
geom_sf(data = landuse, aes(fill = class), col = 1)+
geom_sf(data = river, col = "blue", size =1)+
geom_point(data = points, aes(x = Long, y = Lat), size = 4, shape = 16)+
geom_text(data = points, aes(x=Long+0.003, y = Lat+0.003, label = Site))+
scale_fill_brewer(name = "Landuse\nlandcover\nClasses",palette = "Paired")+
theme_bw()+
scale_y_continuous(limits = c(-6.87, -6.765),
breaks = seq(-6.86, -6.78, length.out = 3))+
scale_x_continuous(breaks = seq(39.13, 39.3,
length.out = 3))+
theme(legend.direction = "horizontal",
legend.position = c(.5,.15),
legend.background = element_rect(colour = 1))+
labs(x = NULL, y = NULL)
map
scalebar(map, dist = 2, dd2km = TRUE, model = "WGS84")
metals.season[,7:14]%>%plot()
cor(metals.season$As, metals.season$Pb, method = "pearson", use = "complete.obs")
# gofGroupTest(metals.season.long$measurements~metals.season.long$metals)
require(factoextra)
envi = read_excel("E:/Data Manipulation/Kim/Msimbazi_Environ.xlsx")
envi.season = envi%>%rename(Temperature = `Temperature (oC)`, DO = `DO(mg/L)`, EC = `EC/(mS/s)`, ORP = `ORP/(mV)`, Turbidity = `Turbidity/(NTU)`, TDS = `TDS/(g/L)`, Salinity = `Salinity/(%)`)%>%mutate(Season = replace(Season, Season == "March", "Wet"), Season = replace(Season, Season == "August", "Dry"))
envi.season$Site = as.factor(envi.season$Site)
envi.season$Season = as.factor(envi.season$Season)
envi.metal.season = envi.season%>%bind_cols(metals)%>%select(-c(month, Longitude, latitude))%>%
mutate(Cd = replace(Cd, is.na(Cd), 0.001),
Cr = replace(Cr, is.na(Cr), 0.001),
Cu = replace(Cu, is.na(Cu), 0.001),
Ni = replace(Ni, is.na(Ni), 0.001),
Pb = replace(Pb, is.na(Pb), 0.001),
Sn = replace(Sn, is.na(Sn), 0.001),
Zn = replace(Zn, is.na(Zn), 0.001),
Salinity = replace(Salinity, is.na(Salinity), 0.001))
pca = prcomp(envi.metal.season[3:18], scale. = TRUE)
fviz_pca_biplot(pca, repel = TRUE, geom = c('point', 'text'), col.ind = 'cos2',
habillage = envi.metal.season$Season,
addEllipses = TRUE, ellipse.level=0.5) +
theme_bw() + coord_equal()+
theme(legend.background = element_rect(colour = 1),
legend.position = c(.9,.85))
metals.dl = as.data.frame(metals%>%select(-month)%>%as.matrix()+0.001)
envi.metal.dl.season = envi.season%>%bind_cols(metals.dl)%>%select(-c( Longitude, latitude))%>%
mutate(Cd = replace(Cd, is.na(Cd), 0.001),
Cr = replace(Cr, is.na(Cr), 0.001),
Cu = replace(Cu, is.na(Cu), 0.001),
Ni = replace(Ni, is.na(Ni), 0.001),
Pb = replace(Pb, is.na(Pb), 0.001),
Sn = replace(Sn, is.na(Sn), 0.001),
Zn = replace(Zn, is.na(Zn), 0.001),
Salinity = replace(Salinity, is.na(Salinity), 0.001))
pca.dl = prcomp(envi.metal.dl.season[3:18], scale. = TRUE)
fviz_pca_biplot(pca.dl, repel = TRUE, geom = c('point', 'text'), col.ind = 'cos2',
habillage = envi.metal.season$Season,
addEllipses = TRUE, ellipse.level=0.5) +
theme_bw() + coord_equal()+
theme(legend.background = element_rect(colour = 1),
legend.position = c(.9,.85))+
labs(title = "", x = "PC1 (30.7%)",y = "PC2 (21.9%)" )
ggsave("pca.jpg", dpi = 300)
package_version()
package_version("ggplot2")
